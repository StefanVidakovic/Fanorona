{\rtf1\ansi\ansicpg1252\cocoartf1504\cocoasubrtf820
{\fonttbl\f0\fswiss\fcharset0 Helvetica;\f1\fmodern\fcharset0 Courier;\f2\fmodern\fcharset0 Courier-Bold;
}
{\colortbl;\red255\green255\blue255;}
{\*\expandedcolortbl;;}
\margl1440\margr1440\vieww20440\viewh15600\viewkind0
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0

\f0\fs24 \cf0 Tyler Santos 
\i (1509651)
\i0  and Stefan Vidakovic 
\i (1458690)
\i0   - CMPUT 275 Section EB2\
Project Proposal\
\

\i\b Fanorona Strategy Game 
\i0\b0 \

\b \
Description:\

\b0 \
The Game Fanorona is similar in concept to checkers, and originated in Madagascar. It is a two player game that involves black and white pearls/game pieces that are placed on a 9 x 5 board. The board is unique because it has a set connection structure between each position, including vertical, horizontal and diagonal connections 
\i (upon certain conditions). 
\i0 Pieces are only allowed to move along these connections. \
\
The objective of the game is to remove all of your opponents pieces, or to cause your opponent to be unable to execute any move. Capturing opponent pieces is done by moving into an open space neighbouring an opponent piece, 
\b or 
\b0 moving out of a space which neighbors opponent pieces. These moves cause all consecutive opponent pieces in the corresponding line to be eliminated.\
\
For more in-depth instructions please visit: http://gasy-fanorona.sourceforge.net/docs/fanorona_rules.html#basic\
The final project demonstration will entail mostly of a demo of the game as well as the opportunity for the instructor and TA to try it for themselves/challenge us in a match.\
\
The \'93position tracking\'94 of pieces on the board involves graph-theory and the User interface design will be a new and exciting learning experience. There will be numerous instances of trees that will be implemented for gameplay, such as our knowledge of searching trees to give the user \'93next move\'94 options/choices.\
\

\b Milestones:\
\
Week 1:\

\b0 - Research the possible UI development Libraries Kivy and Tkinter and decide which will be best to use\
- Create small sample projects which utilize GUI\'92s to get an idea of how we can apply the same ideas to our much larger/more complicated design\
( create a small LED on/off program with a couple of buttons using a GUI etc)\
- Decide on our graphics for the game and implement our GUI\
- Create menus and learn how to navigate between them
\b \
\
Week 2:\

\b0 - Brainstorm the graphs and trees that we need to get our gameplay to work properly\
- Figure out how to interact between variables and graphical objects, possibly modifying our GUI if needed\
- Get the basic framework of gameplay implemented\

\b \
Week 3:\

\b0 - Polish off the gameplay and test for errors/incorrect cases, fix anything from gameplay that is not working properly.\
- If possible add sound and enhance graphics/animations
\b \
\pard\pardeftab720\partightenfactor0

\b0 \cf0 \expnd0\expndtw0\kerning0
- CompleteREADME, wiring documentation, and how to play\
  information.
\f1\fs26 \
\pard\pardeftab720\partightenfactor0

\f2\b \cf0 Bonus Milestone:\
\pard\pardeftab720\partightenfactor0

\f0\b0\fs24 \cf0 - Multiple Board sizes\
- Move timer ( cut-off length before deciding on a move)\
- Mute Sound button\
- Rule Menu\kerning1\expnd0\expndtw0 \
\pard\pardeftab720\partightenfactor0

\f1\fs26 \cf0 \expnd0\expndtw0\kerning0
\

\f2\b Required Hardware:\
\pard\pardeftab720\partightenfactor0

\f0\b0 \cf0 -PC or Possibly Rasperry-Pi (undecided)
\f1 \
 
\f0\b\fs24 \kerning1\expnd0\expndtw0 \
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0
\cf0 \

\b0 \
\
\
}